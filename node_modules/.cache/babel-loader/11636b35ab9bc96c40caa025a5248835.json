{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\AllBets.js\";\nimport React from 'react';\nimport TableHeader from './TableHeader';\nimport './App.css'; // Use the existing App.css for styles\n\nfunction AllBets({\n  data\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-bets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"All Bets\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, data.slice(1).map((bet, index) => {\n    var _bet$resultColumnInde;\n    // Check for the value of the \"I\" column (assuming index 8; adjust if necessary)\n    const resultColumnIndex = 8; // Update this index if \"I\" is in a different position\n    const result = (_bet$resultColumnInde = bet[resultColumnIndex]) === null || _bet$resultColumnInde === void 0 ? void 0 : _bet$resultColumnInde.toUpperCase();\n    let rowClassName = '';\n    if (result === 'W') {\n      rowClassName = 'win-row';\n    } else if (result === 'L') {\n      rowClassName = 'lose-row';\n    }\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      className: rowClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, bet.map((cell, i) => /*#__PURE__*/React.createElement(\"td\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, cell)));\n  }))));\n}\nexport default AllBets;","map":{"version":3,"names":["React","TableHeader","AllBets","data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","bet","index","_bet$resultColumnInde","resultColumnIndex","result","toUpperCase","rowClassName","key","cell","i"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/AllBets.js"],"sourcesContent":["import React from 'react';\r\nimport TableHeader from './TableHeader';\r\nimport './App.css'; // Use the existing App.css for styles\r\n\r\nfunction AllBets({ data }) {\r\n  return (\r\n    <div className=\"all-bets\">\r\n      <h2>All Bets</h2>\r\n      <table>\r\n        <TableHeader />\r\n        <tbody>\r\n          {data.slice(1).map((bet, index) => {\r\n            // Check for the value of the \"I\" column (assuming index 8; adjust if necessary)\r\n            const resultColumnIndex = 8; // Update this index if \"I\" is in a different position\r\n            const result = bet[resultColumnIndex]?.toUpperCase();\r\n            let rowClassName = '';\r\n\r\n            if (result === 'W') {\r\n              rowClassName = 'win-row';\r\n            } else if (result === 'L') {\r\n              rowClassName = 'lose-row';\r\n            }\r\n\r\n            return (\r\n              <tr key={index} className={rowClassName}>\r\n                {bet.map((cell, i) => (\r\n                  <td key={i}>{cell}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllBets;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,WAAW,CAAC,CAAC;;AAEpB,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACzB,oBACEH,KAAA,CAAAI,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBX,KAAA,CAAAI,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBX,KAAA,CAAAI,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEX,KAAA,CAAAI,aAAA,CAACH,WAAW;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACfX,KAAA,CAAAI,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGR,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAAA,IAAAC,qBAAA;IACjC;IACA,MAAMC,iBAAiB,GAAG,CAAC,CAAC,CAAC;IAC7B,MAAMC,MAAM,IAAAF,qBAAA,GAAGF,GAAG,CAACG,iBAAiB,CAAC,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBG,WAAW,CAAC,CAAC;IACpD,IAAIC,YAAY,GAAG,EAAE;IAErB,IAAIF,MAAM,KAAK,GAAG,EAAE;MAClBE,YAAY,GAAG,SAAS;IAC1B,CAAC,MAAM,IAAIF,MAAM,KAAK,GAAG,EAAE;MACzBE,YAAY,GAAG,UAAU;IAC3B;IAEA,oBACEpB,KAAA,CAAAI,aAAA;MAAIiB,GAAG,EAAEN,KAAM;MAACV,SAAS,EAAEe,YAAa;MAAAd,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACrCG,GAAG,CAACD,GAAG,CAAC,CAACS,IAAI,EAAEC,CAAC,kBACfvB,KAAA,CAAAI,aAAA;MAAIiB,GAAG,EAAEE,CAAE;MAAAjB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEW,IAAS,CACvB,CACC,CAAC;EAET,CAAC,CACI,CACF,CACJ,CAAC;AAEV;AAEA,eAAepB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}