{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\MovingAverageChart.js\";\nimport React, { useMemo } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nfunction MovingAverageChart({\n  data\n}) {\n  // Function to safely parse float values after removing commas\n  const parseNumber = value => {\n    if (value === undefined || value === null || value === '') {\n      return null; // Return null if value is invalid or empty\n    }\n    return parseFloat(value.toString().replace(/,/g, ''));\n  };\n\n  // Extract data directly from column AN (index 39) and filter out blanks\n  const movingAverageData = useMemo(() => {\n    return data.slice(1) // Skip header row\n    .map(row => parseNumber(row[39])) // Column AN: Moving Average\n    .filter(value => value !== null); // Remove null values (blanks)\n  }, [data]);\n\n  // Prepare data for chart, starting from Bet Number 100\n  const filteredData = movingAverageData.slice(99); // Remove first 99 values\n\n  const chartData = {\n    labels: Array.from({\n      length: filteredData.length\n    }, (_, i) => i + 100),\n    // X-axis labels start at 100\n    datasets: [{\n      label: 'Moving Average (Last 100 Bets)',\n      data: filteredData,\n      fill: false,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 2,\n      pointRadius: 0 // Remove data points on the line\n    }]\n  };\n\n  // Chart options with custom tooltip and bolder y=0 gridline\n  const options = {\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Bet Number',\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        grid: {\n          borderDash: [8, 4],\n          color: '#ddd'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Moving Average Profit/Loss',\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        grid: {\n          color: context => context.tick.value === 0 ? '#000' : '#ccc',\n          lineWidth: context => context.tick.value === 0 ? 2 : 1,\n          borderDash: [8, 4]\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        titleFont: {\n          size: 14,\n          weight: 'bold'\n        },\n        bodyFont: {\n          size: 12\n        },\n        boxPadding: 10,\n        cornerRadius: 4,\n        borderWidth: 1,\n        borderColor: '#ccc'\n      },\n      legend: {\n        display: false // Hide the legend\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      color: '#333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Last 100 Bets Moving Average\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}\nexport default MovingAverageChart;","map":{"version":3,"names":["React","useMemo","Line","MovingAverageChart","data","parseNumber","value","undefined","parseFloat","toString","replace","movingAverageData","slice","map","row","filter","filteredData","chartData","labels","Array","from","length","_","i","datasets","label","fill","backgroundColor","borderColor","borderWidth","pointRadius","options","scales","x","title","display","text","font","size","weight","grid","borderDash","color","y","context","tick","lineWidth","plugins","tooltip","titleFont","bodyFont","boxPadding","cornerRadius","legend","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/MovingAverageChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction MovingAverageChart({ data }) {\r\n  // Function to safely parse float values after removing commas\r\n  const parseNumber = (value) => {\r\n    if (value === undefined || value === null || value === '') {\r\n      return null; // Return null if value is invalid or empty\r\n    }\r\n    return parseFloat(value.toString().replace(/,/g, ''));\r\n  };\r\n\r\n  // Extract data directly from column AN (index 39) and filter out blanks\r\n  const movingAverageData = useMemo(() => {\r\n    return data\r\n      .slice(1) // Skip header row\r\n      .map((row) => parseNumber(row[39])) // Column AN: Moving Average\r\n      .filter((value) => value !== null); // Remove null values (blanks)\r\n  }, [data]);\r\n\r\n  // Prepare data for chart, starting from Bet Number 100\r\n  const filteredData = movingAverageData.slice(99); // Remove first 99 values\r\n\r\n  const chartData = {\r\n    labels: Array.from({ length: filteredData.length }, (_, i) => i + 100), // X-axis labels start at 100\r\n    datasets: [\r\n      {\r\n        label: 'Moving Average (Last 100 Bets)',\r\n        data: filteredData,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 2,\r\n        pointRadius: 0, // Remove data points on the line\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options with custom tooltip and bolder y=0 gridline\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Bet Number',\r\n          font: {\r\n            size: 16,\r\n            weight: 'bold',\r\n          },\r\n        },\r\n        grid: {\r\n          borderDash: [8, 4],\r\n          color: '#ddd',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Moving Average Profit/Loss',\r\n          font: {\r\n            size: 16,\r\n            weight: 'bold',\r\n          },\r\n        },\r\n        grid: {\r\n          color: (context) => (context.tick.value === 0 ? '#000' : '#ccc'),\r\n          lineWidth: (context) => (context.tick.value === 0 ? 2 : 1),\r\n          borderDash: [8, 4],\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0,0,0,0.7)',\r\n        titleFont: {\r\n          size: 14,\r\n          weight: 'bold',\r\n        },\r\n        bodyFont: {\r\n          size: 12,\r\n        },\r\n        boxPadding: 10,\r\n        cornerRadius: 4,\r\n        borderWidth: 1,\r\n        borderColor: '#ccc',\r\n      },\r\n      legend: {\r\n        display: false, // Hide the legend\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      <h2 style={{ textAlign: 'center', color: '#333' }}>Last 100 Bets Moving Average</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovingAverageChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}