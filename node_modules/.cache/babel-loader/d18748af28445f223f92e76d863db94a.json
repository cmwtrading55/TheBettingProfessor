{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\SummaryBySport.js\";\nimport React, { useState, useEffect } from 'react';\nfunction SummaryBySport({\n  data,\n  onSportClick\n}) {\n  const [selectedSport, setSelectedSport] = useState(null); // Track the selected sport\n\n  const filteredData = data.slice(1); // Remove header row by slicing data from index 1\n\n  let validBetCount = 0;\n  let invalidBetCount = 0;\n  const skippedRows = [];\n  const summary = filteredData.reduce((acc, bet, index) => {\n    const sport = bet[3]; // Assuming sport is in column 3\n    const stake = parseFloat(bet[2]); // Column C: Stake\n    const profitLoss = parseFloat(bet[10]); // Column K: Profit/Loss\n    const unitProfitLoss = parseFloat(bet[9]); // Column J: Unit P/L\n\n    if (isNaN(stake) || isNaN(profitLoss) || isNaN(unitProfitLoss)) {\n      invalidBetCount += 1;\n      skippedRows.push({\n        index: index + 1,\n        bet\n      });\n      return acc;\n    }\n    validBetCount += 1;\n    if (!acc[sport]) {\n      acc[sport] = {\n        sport,\n        stake: 0,\n        profitLoss: 0,\n        unitProfitLoss: 0,\n        numBets: 0\n      };\n    }\n    acc[sport].stake += stake;\n    acc[sport].profitLoss += profitLoss;\n    acc[sport].unitProfitLoss += unitProfitLoss;\n    acc[sport].numBets += 1;\n    return acc;\n  }, {});\n  const summaryArray = Object.values(summary);\n  const totalStake = summaryArray.reduce((acc, row) => acc + row.stake, 0);\n  const totalProfitLoss = summaryArray.reduce((acc, row) => acc + row.profitLoss, 0);\n  const totalUnitProfitLoss = summaryArray.reduce((acc, row) => acc + row.unitProfitLoss, 0);\n  const totalBets = summaryArray.reduce((acc, row) => acc + row.numBets, 0);\n  useEffect(() => {\n    console.log('Valid Bets Processed:', validBetCount);\n    console.log('Invalid Bets Skipped:', invalidBetCount);\n    console.log('Skipped Rows:', skippedRows);\n    console.log('Calculated Summary by Sport:', summary);\n    console.log('Total Stake:', totalStake);\n    console.log('Total Profit/Loss:', totalProfitLoss);\n    console.log('Total Unit P/L:', totalUnitProfitLoss);\n    console.log('Total Number of Bets:', totalBets);\n  }, [summary, totalStake, totalProfitLoss, totalUnitProfitLoss, totalBets, validBetCount, invalidBetCount, skippedRows]);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const sortedSummaryArray = [...summaryArray].sort((a, b) => {\n    if (!sortConfig.key) return 0;\n    const aValue = a[sortConfig.key];\n    const bValue = b[sortConfig.key];\n    if (aValue < bValue) {\n      return sortConfig.direction === 'asc' ? -1 : 1;\n    }\n    if (aValue > bValue) {\n      return sortConfig.direction === 'asc' ? 1 : -1;\n    }\n    return 0;\n  });\n\n  // Handle sport click to filter bets\n  const handleSportClick = sport => {\n    if (selectedSport === sport) {\n      setSelectedSport(null); // If clicked again, reset filter\n      onSportClick(null); // Reset filter to show all bets\n    } else {\n      setSelectedSport(sport);\n      onSportClick(sport); // Filter bets by selected sport\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Summary by Sport\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"summary-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('sport'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Sport\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('stake'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('profitLoss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('unitProfitLoss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Unit P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('numBets'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"No. Bets\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('roi'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"ROI (%)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, sortedSummaryArray.map((row, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: row.profitLoss > 0 ? 'positive-row' : 'negative-row',\n    onClick: () => handleSportClick(row.sport) // Click to filter by sport\n    ,\n    style: {\n      cursor: 'pointer',\n      backgroundColor: row.sport === selectedSport ? '#d3eafc' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, row.sport), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, row.stake.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, row.profitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, row.unitProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, row.numBets), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, (row.profitLoss / row.stake * 100).toFixed(2), \"%\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: totalProfitLoss > 0 ? 'positive-row' : 'negative-row',\n    onClick: () => handleSportClick(null) // Click on total row to reset filter\n    ,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, totalStake.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, totalProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, totalUnitProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, totalBets), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, (totalProfitLoss / totalStake * 100).toFixed(2), \"%\")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setSelectedSport(null);\n      onSportClick(null); // Reset filter to show all bets\n    },\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n}\nexport default SummaryBySport;","map":{"version":3,"names":["React","useState","useEffect","SummaryBySport","data","onSportClick","selectedSport","setSelectedSport","filteredData","slice","validBetCount","invalidBetCount","skippedRows","summary","reduce","acc","bet","index","sport","stake","parseFloat","profitLoss","unitProfitLoss","isNaN","push","numBets","summaryArray","Object","values","totalStake","row","totalProfitLoss","totalUnitProfitLoss","totalBets","console","log","sortConfig","setSortConfig","key","direction","handleSort","sortedSummaryArray","sort","a","b","aValue","bValue","handleSportClick","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","style","cursor","backgroundColor","toFixed","marginTop"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/SummaryBySport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SummaryBySport({ data, onSportClick }) {\r\n  const [selectedSport, setSelectedSport] = useState(null); // Track the selected sport\r\n\r\n  const filteredData = data.slice(1); // Remove header row by slicing data from index 1\r\n\r\n  let validBetCount = 0;\r\n  let invalidBetCount = 0;\r\n  const skippedRows = [];\r\n\r\n  const summary = filteredData.reduce((acc, bet, index) => {\r\n    const sport = bet[3]; // Assuming sport is in column 3\r\n    const stake = parseFloat(bet[2]); // Column C: Stake\r\n    const profitLoss = parseFloat(bet[10]); // Column K: Profit/Loss\r\n    const unitProfitLoss = parseFloat(bet[9]); // Column J: Unit P/L\r\n\r\n    if (isNaN(stake) || isNaN(profitLoss) || isNaN(unitProfitLoss)) {\r\n      invalidBetCount += 1;\r\n      skippedRows.push({ index: index + 1, bet });\r\n      return acc;\r\n    }\r\n\r\n    validBetCount += 1;\r\n\r\n    if (!acc[sport]) {\r\n      acc[sport] = {\r\n        sport,\r\n        stake: 0,\r\n        profitLoss: 0,\r\n        unitProfitLoss: 0,\r\n        numBets: 0,\r\n      };\r\n    }\r\n\r\n    acc[sport].stake += stake;\r\n    acc[sport].profitLoss += profitLoss;\r\n    acc[sport].unitProfitLoss += unitProfitLoss;\r\n    acc[sport].numBets += 1;\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  const summaryArray = Object.values(summary);\r\n\r\n  const totalStake = summaryArray.reduce((acc, row) => acc + row.stake, 0);\r\n  const totalProfitLoss = summaryArray.reduce((acc, row) => acc + row.profitLoss, 0);\r\n  const totalUnitProfitLoss = summaryArray.reduce((acc, row) => acc + row.unitProfitLoss, 0);\r\n  const totalBets = summaryArray.reduce((acc, row) => acc + row.numBets, 0);\r\n\r\n  useEffect(() => {\r\n    console.log('Valid Bets Processed:', validBetCount);\r\n    console.log('Invalid Bets Skipped:', invalidBetCount);\r\n    console.log('Skipped Rows:', skippedRows);\r\n    console.log('Calculated Summary by Sport:', summary);\r\n    console.log('Total Stake:', totalStake);\r\n    console.log('Total Profit/Loss:', totalProfitLoss);\r\n    console.log('Total Unit P/L:', totalUnitProfitLoss);\r\n    console.log('Total Number of Bets:', totalBets);\r\n  }, [summary, totalStake, totalProfitLoss, totalUnitProfitLoss, totalBets, validBetCount, invalidBetCount, skippedRows]);\r\n\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const sortedSummaryArray = [...summaryArray].sort((a, b) => {\r\n    if (!sortConfig.key) return 0;\r\n    const aValue = a[sortConfig.key];\r\n    const bValue = b[sortConfig.key];\r\n\r\n    if (aValue < bValue) {\r\n      return sortConfig.direction === 'asc' ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortConfig.direction === 'asc' ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  // Handle sport click to filter bets\r\n  const handleSportClick = (sport) => {\r\n    if (selectedSport === sport) {\r\n      setSelectedSport(null); // If clicked again, reset filter\r\n      onSportClick(null); // Reset filter to show all bets\r\n    } else {\r\n      setSelectedSport(sport);\r\n      onSportClick(sport); // Filter bets by selected sport\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"summary-table-container\">\r\n      <h2>Summary by Sport</h2>\r\n      <table className=\"summary-table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('sport')}>Sport</th>\r\n            <th onClick={() => handleSort('stake')}>Stake</th>\r\n            <th onClick={() => handleSort('profitLoss')}>P/L</th>\r\n            <th onClick={() => handleSort('unitProfitLoss')}>Unit P/L</th>\r\n            <th onClick={() => handleSort('numBets')}>No. Bets</th>\r\n            <th onClick={() => handleSort('roi')}>ROI (%)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedSummaryArray.map((row, index) => (\r\n            <tr\r\n              key={index}\r\n              className={row.profitLoss > 0 ? 'positive-row' : 'negative-row'}\r\n              onClick={() => handleSportClick(row.sport)} // Click to filter by sport\r\n              style={{ cursor: 'pointer', backgroundColor: row.sport === selectedSport ? '#d3eafc' : '' }}\r\n            >\r\n              <td>{row.sport}</td>\r\n              <td>{row.stake.toFixed(2)}</td>\r\n              <td>{row.profitLoss.toFixed(2)}</td>\r\n              <td>{row.unitProfitLoss.toFixed(2)}</td>\r\n              <td>{row.numBets}</td>\r\n              <td>{((row.profitLoss / row.stake) * 100).toFixed(2)}%</td>\r\n            </tr>\r\n          ))}\r\n          {/* Summary row (fixed position) */}\r\n          <tr\r\n            className={totalProfitLoss > 0 ? 'positive-row' : 'negative-row'}\r\n            onClick={() => handleSportClick(null)} // Click on total row to reset filter\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            <td>Total</td>\r\n            <td>{totalStake.toFixed(2)}</td>\r\n            <td>{totalProfitLoss.toFixed(2)}</td>\r\n            <td>{totalUnitProfitLoss.toFixed(2)}</td>\r\n            <td>{totalBets}</td>\r\n            <td>{((totalProfitLoss / totalStake) * 100).toFixed(2)}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {/* Reset Button */}\r\n      <button\r\n        onClick={() => {\r\n          setSelectedSport(null);\r\n          onSportClick(null); // Reset filter to show all bets\r\n        }}\r\n        style={{ marginTop: '10px' }}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryBySport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}