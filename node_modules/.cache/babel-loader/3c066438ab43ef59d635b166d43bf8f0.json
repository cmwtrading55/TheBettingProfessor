{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\AllBets.js\";\nimport React from 'react';\nimport TableHeader from './TableHeader';\nimport '../styles/App.css'; // Import the App.css file\n\n// Function to determine the class for each row based on the bet result\nconst getRowClass = bet => {\n  const result = bet[4]; // Assuming the result is in the 5th column (index 4)\n  if (result === 'Win') {\n    return 'win-row';\n  } else if (result === 'Loss') {\n    return 'loss-row';\n  } else if (result === 'Draw') {\n    return 'draw-row';\n  } else {\n    return ''; // Default class\n  }\n};\nfunction AllBets({\n  data\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"All Bets\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, data.slice(1).map((bet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: getRowClass(bet),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, bet.map((cell, i) => /*#__PURE__*/React.createElement(\"td\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, cell)))))));\n}\nexport default AllBets;","map":{"version":3,"names":["React","TableHeader","getRowClass","bet","result","AllBets","data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","key","cell","i"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/AllBets.js"],"sourcesContent":["import React from 'react';\r\nimport TableHeader from './TableHeader';\r\nimport '../styles/App.css'; // Import the App.css file\r\n\r\n// Function to determine the class for each row based on the bet result\r\nconst getRowClass = (bet) => {\r\n  const result = bet[4]; // Assuming the result is in the 5th column (index 4)\r\n  if (result === 'Win') {\r\n    return 'win-row';\r\n  } else if (result === 'Loss') {\r\n    return 'loss-row';\r\n  } else if (result === 'Draw') {\r\n    return 'draw-row';\r\n  } else {\r\n    return ''; // Default class\r\n  }\r\n};\r\n\r\nfunction AllBets({ data }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>All Bets</h2>\r\n      <table>\r\n        <TableHeader /> {/* Proper use of TableHeader inside table */}\r\n        <tbody>\r\n          {data.slice(1).map((bet, index) => (\r\n            <tr key={index} className={getRowClass(bet)}>\r\n              {bet.map((cell, i) => (\r\n                <td key={i}>{cell}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllBets;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB,CAAC,CAAC;;AAE5B;AACA,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAC3B,MAAMC,MAAM,GAAGD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,IAAIC,MAAM,KAAK,KAAK,EAAE;IACpB,OAAO,SAAS;EAClB,CAAC,MAAM,IAAIA,MAAM,KAAK,MAAM,EAAE;IAC5B,OAAO,UAAU;EACnB,CAAC,MAAM,IAAIA,MAAM,KAAK,MAAM,EAAE;IAC5B,OAAO,UAAU;EACnB,CAAC,MAAM;IACL,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC;AAED,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACzB,oBACEN,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjBd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEd,KAAA,CAAAO,aAAA,CAACN,WAAW;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,KAAC,eAChBd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGR,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACb,GAAG,EAAEc,KAAK,kBAC5BjB,KAAA,CAAAO,aAAA;IAAIW,GAAG,EAAED,KAAM;IAACT,SAAS,EAAEN,WAAW,CAACC,GAAG,CAAE;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzCX,GAAG,CAACa,GAAG,CAAC,CAACG,IAAI,EAAEC,CAAC,kBACfpB,KAAA,CAAAO,aAAA;IAAIW,GAAG,EAAEE,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEK,IAAS,CACvB,CACC,CACL,CACI,CACF,CACJ,CAAC;AAEV;AAEA,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}