{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\CumulativeGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nfunction CumulativeGraph({\n  data\n}) {\n  // Function to safely parse float values after removing commas\n  const parseNumber = value => parseFloat(value.toString().replace(/,/g, ''));\n\n  // Extract relevant data from the columns\n  const cumulativePLData = data.map(row => parseNumber(row[11])); // Column L: Cumulative P/L\n  const cumulativeStakeData = data.map(row => parseNumber(row[12])); // Column M: Cumulative Stake\n  const betDetails = data.map(row => row[5]); // Column F: Bet details\n\n  // Filter out invalid data points\n  const filteredData = cumulativePLData.map((value, index) => ({\n    pl: value,\n    stake: cumulativeStakeData[index],\n    betDetail: betDetails[index]\n  })).filter(item => !isNaN(item.pl) && !isNaN(item.stake) && item.stake >= 0);\n\n  // Find maximum cumulative stake value\n  const maxStake = Math.max(...filteredData.map(item => item.stake));\n\n  // Prepare data for chart\n  const chartData = {\n    labels: filteredData.map(item => item.stake),\n    // X-axis labels as cumulative stake values\n    datasets: [{\n      label: 'Cumulative P/L',\n      data: filteredData.map(item => item.pl),\n      fill: {\n        target: 'origin',\n        above: 'rgba(75, 192, 192, 0.3)',\n        // Gradient fill color above the line\n        below: 'rgba(255, 99, 132, 0.3)' // Gradient fill color below the line\n      },\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.8)',\n      borderWidth: 3,\n      // Make line thicker\n      pointRadius: 4,\n      // Size of points on the line\n      pointBackgroundColor: 'rgb(75, 192, 192)' // Point color\n    }]\n  };\n\n  // Chart options with custom tooltip and bolder y=0 gridline\n  const options = {\n    scales: {\n      x: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Cumulative Stake',\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        min: 0,\n        // Set the minimum x-axis value to 0\n        max: maxStake,\n        // Dynamically set maximum x-axis value based on data\n        grid: {\n          borderDash: [8, 4],\n          // Dashed grid lines\n          color: '#ddd'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Cumulative P/L',\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        },\n        grid: {\n          color: context => context.tick.value === 0 ? '#000' : '#ccc',\n          // Bolder line at y=0\n          lineWidth: context => context.tick.value === 0 ? 2 : 1,\n          // Thicker line at y=0\n          borderDash: [8, 4] // Dashed grid lines\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        // Dark tooltip background\n        titleFont: {\n          size: 14,\n          weight: 'bold'\n        },\n        bodyFont: {\n          size: 12\n        },\n        boxPadding: 10,\n        cornerRadius: 4,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        callbacks: {\n          // Custom tooltip content\n          label: tooltipItem => {\n            const item = filteredData[tooltipItem.dataIndex];\n            return [`${item.betDetail}`, `Cumulative P/L: ${item.pl.toFixed(2)}`];\n          }\n        }\n      },\n      legend: {\n        position: 'bottom',\n        labels: {\n          font: {\n            size: 14\n          },\n          padding: 20\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#fafafa',\n      borderRadius: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: 'center',\n      color: '#333'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Cumulative P/L vs Cumulative Stake\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\nexport default CumulativeGraph;","map":{"version":3,"names":["React","Line","CumulativeGraph","data","parseNumber","value","parseFloat","toString","replace","cumulativePLData","map","row","cumulativeStakeData","betDetails","filteredData","index","pl","stake","betDetail","filter","item","isNaN","maxStake","Math","max","chartData","labels","datasets","label","fill","target","above","below","backgroundColor","borderColor","borderWidth","pointRadius","pointBackgroundColor","options","scales","x","type","title","display","text","font","size","weight","min","grid","borderDash","color","y","context","tick","lineWidth","plugins","tooltip","titleFont","bodyFont","boxPadding","cornerRadius","callbacks","tooltipItem","dataIndex","toFixed","legend","position","padding","createElement","style","borderRadius","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","textAlign"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/CumulativeGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction CumulativeGraph({ data }) {\r\n  // Function to safely parse float values after removing commas\r\n  const parseNumber = (value) => parseFloat(value.toString().replace(/,/g, ''));\r\n\r\n  // Extract relevant data from the columns\r\n  const cumulativePLData = data.map((row) => parseNumber(row[11])); // Column L: Cumulative P/L\r\n  const cumulativeStakeData = data.map((row) => parseNumber(row[12])); // Column M: Cumulative Stake\r\n  const betDetails = data.map((row) => row[5]); // Column F: Bet details\r\n\r\n  // Filter out invalid data points\r\n  const filteredData = cumulativePLData\r\n    .map((value, index) => ({\r\n      pl: value,\r\n      stake: cumulativeStakeData[index],\r\n      betDetail: betDetails[index],\r\n    }))\r\n    .filter((item) => !isNaN(item.pl) && !isNaN(item.stake) && item.stake >= 0);\r\n\r\n  // Find maximum cumulative stake value\r\n  const maxStake = Math.max(...filteredData.map((item) => item.stake));\r\n\r\n  // Prepare data for chart\r\n  const chartData = {\r\n    labels: filteredData.map((item) => item.stake), // X-axis labels as cumulative stake values\r\n    datasets: [\r\n      {\r\n        label: 'Cumulative P/L',\r\n        data: filteredData.map((item) => item.pl),\r\n        fill: {\r\n          target: 'origin',\r\n          above: 'rgba(75, 192, 192, 0.3)', // Gradient fill color above the line\r\n          below: 'rgba(255, 99, 132, 0.3)', // Gradient fill color below the line\r\n        },\r\n        backgroundColor: 'rgb(75, 192, 192)',\r\n        borderColor: 'rgba(75, 192, 192, 0.8)',\r\n        borderWidth: 3, // Make line thicker\r\n        pointRadius: 4, // Size of points on the line\r\n        pointBackgroundColor: 'rgb(75, 192, 192)', // Point color\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options with custom tooltip and bolder y=0 gridline\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative Stake',\r\n          font: {\r\n            size: 16,\r\n            weight: 'bold',\r\n          },\r\n        },\r\n        min: 0, // Set the minimum x-axis value to 0\r\n        max: maxStake, // Dynamically set maximum x-axis value based on data\r\n        grid: {\r\n          borderDash: [8, 4], // Dashed grid lines\r\n          color: '#ddd',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative P/L',\r\n          font: {\r\n            size: 16,\r\n            weight: 'bold',\r\n          },\r\n        },\r\n        grid: {\r\n          color: (context) => (context.tick.value === 0 ? '#000' : '#ccc'), // Bolder line at y=0\r\n          lineWidth: (context) => (context.tick.value === 0 ? 2 : 1), // Thicker line at y=0\r\n          borderDash: [8, 4], // Dashed grid lines\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        backgroundColor: 'rgba(0,0,0,0.7)', // Dark tooltip background\r\n        titleFont: {\r\n          size: 14,\r\n          weight: 'bold',\r\n        },\r\n        bodyFont: {\r\n          size: 12,\r\n        },\r\n        boxPadding: 10,\r\n        cornerRadius: 4,\r\n        borderWidth: 1,\r\n        borderColor: '#ccc',\r\n        callbacks: {\r\n          // Custom tooltip content\r\n          label: (tooltipItem) => {\r\n            const item = filteredData[tooltipItem.dataIndex];\r\n            return [`${item.betDetail}`, `Cumulative P/L: ${item.pl.toFixed(2)}`];\r\n          },\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'bottom',\r\n        labels: {\r\n          font: {\r\n            size: 14,\r\n          },\r\n          padding: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', backgroundColor: '#fafafa', borderRadius: '8px' }}>\r\n      <h2 style={{ textAlign: 'center', color: '#333' }}>Cumulative P/L vs Cumulative Stake</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CumulativeGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}