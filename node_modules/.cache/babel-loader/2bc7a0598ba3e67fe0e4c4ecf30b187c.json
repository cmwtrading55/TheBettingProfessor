{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\CumulativeGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nfunction CumulativeGraph({\n  data\n}) {\n  // Extract relevant data from the columns\n  const cumulativePLData = data.map(row => parseFloat(row[11])); // Column L: Cumulative P/L\n  const cumulativeStakeData = data.map(row => parseFloat(row[12])); // Column M: Cumulative Stake\n  const betDetails = data.map(row => row[5]); // Column F: Bet details\n\n  // Filter out invalid data points and keep both cumulative P/L and stake in sync\n  const filteredData = cumulativePLData.reduce((acc, plValue, index) => {\n    const stakeValue = cumulativeStakeData[index];\n    if (!isNaN(plValue) && !isNaN(stakeValue)) {\n      acc.cumulativePL.push(plValue);\n      acc.cumulativeStake.push(stakeValue);\n      acc.betDetails.push(betDetails[index]);\n    }\n    return acc;\n  }, {\n    cumulativePL: [],\n    cumulativeStake: [],\n    betDetails: []\n  });\n\n  // Prepare data for chart\n  const chartData = {\n    labels: filteredData.cumulativeStake,\n    // X-axis labels as cumulative stake values\n    datasets: [{\n      label: 'Cumulative P/L',\n      data: filteredData.cumulativePL,\n      fill: false,\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n\n  // Chart options with custom tooltip\n  const options = {\n    scales: {\n      x: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Cumulative Stake'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Cumulative P/L'\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          // Custom tooltip content\n          label: tooltipItem => {\n            const betDetail = filteredData.betDetails[tooltipItem.dataIndex];\n            const cumulativePL = filteredData.cumulativePL[tooltipItem.dataIndex];\n            return [`${betDetail}`, `Cumulative P/L: ${cumulativePL.toFixed(2)}`];\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Cumulative P/L vs Cumulative Stake\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\nexport default CumulativeGraph;","map":{"version":3,"names":["React","Line","CumulativeGraph","data","cumulativePLData","map","row","parseFloat","cumulativeStakeData","betDetails","filteredData","reduce","acc","plValue","index","stakeValue","isNaN","cumulativePL","push","cumulativeStake","chartData","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","x","type","title","display","text","y","plugins","tooltip","callbacks","tooltipItem","betDetail","dataIndex","toFixed","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/CumulativeGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction CumulativeGraph({ data }) {\r\n  // Extract relevant data from the columns\r\n  const cumulativePLData = data.map((row) => parseFloat(row[11])); // Column L: Cumulative P/L\r\n  const cumulativeStakeData = data.map((row) => parseFloat(row[12])); // Column M: Cumulative Stake\r\n  const betDetails = data.map((row) => row[5]); // Column F: Bet details\r\n\r\n  // Filter out invalid data points and keep both cumulative P/L and stake in sync\r\n  const filteredData = cumulativePLData.reduce(\r\n    (acc, plValue, index) => {\r\n      const stakeValue = cumulativeStakeData[index];\r\n      if (!isNaN(plValue) && !isNaN(stakeValue)) {\r\n        acc.cumulativePL.push(plValue);\r\n        acc.cumulativeStake.push(stakeValue);\r\n        acc.betDetails.push(betDetails[index]);\r\n      }\r\n      return acc;\r\n    },\r\n    { cumulativePL: [], cumulativeStake: [], betDetails: [] }\r\n  );\r\n\r\n  // Prepare data for chart\r\n  const chartData = {\r\n    labels: filteredData.cumulativeStake, // X-axis labels as cumulative stake values\r\n    datasets: [\r\n      {\r\n        label: 'Cumulative P/L',\r\n        data: filteredData.cumulativePL,\r\n        fill: false,\r\n        backgroundColor: 'rgb(75, 192, 192)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options with custom tooltip\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative Stake',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative P/L',\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          // Custom tooltip content\r\n          label: (tooltipItem) => {\r\n            const betDetail = filteredData.betDetails[tooltipItem.dataIndex];\r\n            const cumulativePL = filteredData.cumulativePL[tooltipItem.dataIndex];\r\n            return [`${betDetail}`, `Cumulative P/L: ${cumulativePL.toFixed(2)}`];\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cumulative P/L vs Cumulative Stake</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CumulativeGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}