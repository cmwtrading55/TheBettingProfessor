{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\CumulativeGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nfunction CumulativeGraph({\n  data\n}) {\n  // Extract relevant data from the columns (assuming column L is index 11 and column M is index 12)\n  const cumulativePLData = data.map(row => parseFloat(row[11])); // Column L: Cumulative P/L\n  const cumulativeStakeData = data.map(row => parseFloat(row[12])); // Column M: Cumulative Stake\n\n  // Remove NaN or undefined values for proper plotting\n  const filteredData = cumulativePLData.filter((value, index) => !isNaN(value) && !isNaN(cumulativeStakeData[index]));\n  const chartData = {\n    labels: filteredData.map((_, index) => index + 1),\n    // X-axis labels as sequence number\n    datasets: [{\n      label: 'Cumulative P/L',\n      data: filteredData,\n      fill: false,\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Cumulative Stake'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Cumulative P/L'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Cumulative P/L vs Cumulative Stake\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\nexport default CumulativeGraph;","map":{"version":3,"names":["React","Line","CumulativeGraph","data","cumulativePLData","map","row","parseFloat","cumulativeStakeData","filteredData","filter","value","index","isNaN","chartData","labels","_","datasets","label","fill","backgroundColor","borderColor","options","scales","x","type","title","display","text","y","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/CumulativeGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction CumulativeGraph({ data }) {\r\n  // Extract relevant data from the columns (assuming column L is index 11 and column M is index 12)\r\n  const cumulativePLData = data.map((row) => parseFloat(row[11])); // Column L: Cumulative P/L\r\n  const cumulativeStakeData = data.map((row) => parseFloat(row[12])); // Column M: Cumulative Stake\r\n\r\n  // Remove NaN or undefined values for proper plotting\r\n  const filteredData = cumulativePLData.filter((value, index) => !isNaN(value) && !isNaN(cumulativeStakeData[index]));\r\n\r\n  const chartData = {\r\n    labels: filteredData.map((_, index) => index + 1), // X-axis labels as sequence number\r\n    datasets: [\r\n      {\r\n        label: 'Cumulative P/L',\r\n        data: filteredData,\r\n        fill: false,\r\n        backgroundColor: 'rgb(75, 192, 192)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative Stake',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative P/L',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cumulative P/L vs Cumulative Stake</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CumulativeGraph;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAEtB,SAASC,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACjC;EACA,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,GAAG,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,MAAME,mBAAmB,GAAGL,IAAI,CAACE,GAAG,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpE;EACA,MAAMG,YAAY,GAAGL,gBAAgB,CAACM,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK,CAACC,KAAK,CAACF,KAAK,CAAC,IAAI,CAACE,KAAK,CAACL,mBAAmB,CAACI,KAAK,CAAC,CAAC,CAAC;EAEnH,MAAME,SAAS,GAAG;IAChBC,MAAM,EAAEN,YAAY,CAACJ,GAAG,CAAC,CAACW,CAAC,EAAEJ,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;IAAE;IACnDK,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBf,IAAI,EAAEM,YAAY;MAClBU,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACE5B,KAAA,CAAA8B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpC,KAAA,CAAA8B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oCAAsC,CAAC,eAC3CpC,KAAA,CAAA8B,aAAA,CAAC7B,IAAI;IAACE,IAAI,EAAEW,SAAU;IAACQ,OAAO,EAAEA,OAAQ;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvC,CAAC;AAEV;AAEA,eAAelC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}