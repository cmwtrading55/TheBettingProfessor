{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\SummaryBySport.js\";\nimport React, { useState, useEffect } from 'react';\nfunction SummaryBySport({\n  data,\n  onSportClick\n}) {\n  // Remove header row by slicing data from index 1\n  const filteredData = data.slice(1);\n\n  // Track the number of bets being processed and skipped\n  let validBetCount = 0;\n  let invalidBetCount = 0;\n\n  // Array to hold details of skipped rows for logging\n  const skippedRows = [];\n\n  // Calculate summary by sport\n  const summary = filteredData.reduce((acc, bet, index) => {\n    const sport = bet[3]; // Column D: Sport\n    const stake = parseFloat(bet[2]); // Column C: Stake\n    const profitLoss = parseFloat(bet[10]); // Column K: Profit/Loss\n    const unitProfitLoss = parseFloat(bet[9]); // Column J: Unit P/L\n\n    // Check for valid numeric data before proceeding\n    if (isNaN(stake) || isNaN(profitLoss) || isNaN(unitProfitLoss)) {\n      invalidBetCount += 1; // Increment invalid bet counter\n      skippedRows.push({\n        index: index + 2,\n        bet\n      }); // Add skipped row to array (index + 2 for correct sheet row number)\n      return acc; // Skip rows with invalid data\n    }\n\n    // Add a log for the specific row being tracked\n    if (index + 2 === 34) {\n      console.log('Processing Row 34:', bet);\n      console.log('Sport:', sport);\n      console.log('Stake:', stake);\n      console.log('Profit/Loss:', profitLoss);\n      console.log('Unit P/L:', unitProfitLoss);\n    }\n    validBetCount += 1; // Increment valid bet counter\n\n    if (!acc[sport]) {\n      acc[sport] = {\n        sport,\n        stake: 0,\n        profitLoss: 0,\n        unitProfitLoss: 0,\n        numBets: 0\n      };\n    }\n    acc[sport].stake += stake;\n    acc[sport].profitLoss += profitLoss;\n    acc[sport].unitProfitLoss += unitProfitLoss; // Correct calculation\n    acc[sport].numBets += 1;\n    return acc;\n  }, {});\n  const summaryArray = Object.values(summary);\n\n  // Calculate totals\n  const totalStake = summaryArray.reduce((acc, row) => acc + row.stake, 0);\n  const totalProfitLoss = summaryArray.reduce((acc, row) => acc + row.profitLoss, 0);\n  const totalUnitProfitLoss = summaryArray.reduce((acc, row) => acc + row.unitProfitLoss, 0);\n  const totalBets = summaryArray.reduce((acc, row) => acc + row.numBets, 0);\n\n  // Log calculated summaries and totals to console\n  useEffect(() => {\n    console.log('Valid Bets Processed:', validBetCount);\n    console.log('Invalid Bets Skipped:', invalidBetCount);\n    console.log('Skipped Rows:', skippedRows); // Log details of skipped rows\n    console.log('Calculated Summary by Sport:', summary);\n    console.log('Total Stake:', totalStake);\n    console.log('Total Profit/Loss:', totalProfitLoss);\n    console.log('Total Unit P/L:', totalUnitProfitLoss);\n    console.log('Total Number of Bets:', totalBets);\n  }, [summary, totalStake, totalProfitLoss, totalUnitProfitLoss, totalBets, validBetCount, invalidBetCount, skippedRows]);\n\n  // State for sorting\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Sorting the summary array\n  const sortedSummaryArray = [...summaryArray].sort((a, b) => {\n    if (!sortConfig.key) return 0;\n    const aValue = a[sortConfig.key];\n    const bValue = b[sortConfig.key];\n    if (aValue < bValue) {\n      return sortConfig.direction === 'asc' ? -1 : 1;\n    }\n    if (aValue > bValue) {\n      return sortConfig.direction === 'asc' ? 1 : -1;\n    }\n    return 0;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Summary by Sport\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"summary-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('sport'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Sport\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('stake'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('profitLoss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('unitProfitLoss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Unit P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('numBets'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"No. Bets\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('roi'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"ROI (%)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, sortedSummaryArray.map((row, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: row.profitLoss > 0 ? 'positive-row' : 'negative-row',\n    onClick: () => onSportClick(row.sport) // Call onSportClick with the sport name\n    ,\n    style: {\n      cursor: 'pointer'\n    } // Add cursor pointer to indicate clickable row\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, row.sport), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, row.stake.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, row.profitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, row.unitProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, row.numBets), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, (row.profitLoss / row.stake * 100).toFixed(2), \"%\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: totalProfitLoss > 0 ? 'positive-row' : 'negative-row',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, totalStake.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, totalProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, totalUnitProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, totalBets), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, (totalProfitLoss / totalStake * 100).toFixed(2), \"%\")))));\n}\nexport default SummaryBySport;","map":{"version":3,"names":["React","useState","useEffect","SummaryBySport","data","onSportClick","filteredData","slice","validBetCount","invalidBetCount","skippedRows","summary","reduce","acc","bet","index","sport","stake","parseFloat","profitLoss","unitProfitLoss","isNaN","push","console","log","numBets","summaryArray","Object","values","totalStake","row","totalProfitLoss","totalUnitProfitLoss","totalBets","sortConfig","setSortConfig","key","direction","handleSort","sortedSummaryArray","sort","a","b","aValue","bValue","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","style","cursor","toFixed"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/SummaryBySport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SummaryBySport({ data, onSportClick }) {\r\n  // Remove header row by slicing data from index 1\r\n  const filteredData = data.slice(1);\r\n\r\n  // Track the number of bets being processed and skipped\r\n  let validBetCount = 0;\r\n  let invalidBetCount = 0;\r\n\r\n  // Array to hold details of skipped rows for logging\r\n  const skippedRows = [];\r\n\r\n  // Calculate summary by sport\r\n  const summary = filteredData.reduce((acc, bet, index) => {\r\n    const sport = bet[3]; // Column D: Sport\r\n    const stake = parseFloat(bet[2]); // Column C: Stake\r\n    const profitLoss = parseFloat(bet[10]); // Column K: Profit/Loss\r\n    const unitProfitLoss = parseFloat(bet[9]); // Column J: Unit P/L\r\n\r\n    // Check for valid numeric data before proceeding\r\n    if (isNaN(stake) || isNaN(profitLoss) || isNaN(unitProfitLoss)) {\r\n      invalidBetCount += 1; // Increment invalid bet counter\r\n      skippedRows.push({ index: index + 2, bet }); // Add skipped row to array (index + 2 for correct sheet row number)\r\n      return acc; // Skip rows with invalid data\r\n    }\r\n\r\n    // Add a log for the specific row being tracked\r\n    if (index + 2 === 34) {\r\n      console.log('Processing Row 34:', bet);\r\n      console.log('Sport:', sport);\r\n      console.log('Stake:', stake);\r\n      console.log('Profit/Loss:', profitLoss);\r\n      console.log('Unit P/L:', unitProfitLoss);\r\n    }\r\n\r\n    validBetCount += 1; // Increment valid bet counter\r\n\r\n    if (!acc[sport]) {\r\n      acc[sport] = {\r\n        sport,\r\n        stake: 0,\r\n        profitLoss: 0,\r\n        unitProfitLoss: 0,\r\n        numBets: 0,\r\n      };\r\n    }\r\n\r\n    acc[sport].stake += stake;\r\n    acc[sport].profitLoss += profitLoss;\r\n    acc[sport].unitProfitLoss += unitProfitLoss; // Correct calculation\r\n    acc[sport].numBets += 1;\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  const summaryArray = Object.values(summary);\r\n\r\n  // Calculate totals\r\n  const totalStake = summaryArray.reduce((acc, row) => acc + row.stake, 0);\r\n  const totalProfitLoss = summaryArray.reduce((acc, row) => acc + row.profitLoss, 0);\r\n  const totalUnitProfitLoss = summaryArray.reduce((acc, row) => acc + row.unitProfitLoss, 0);\r\n  const totalBets = summaryArray.reduce((acc, row) => acc + row.numBets, 0);\r\n\r\n  // Log calculated summaries and totals to console\r\n  useEffect(() => {\r\n    console.log('Valid Bets Processed:', validBetCount);\r\n    console.log('Invalid Bets Skipped:', invalidBetCount);\r\n    console.log('Skipped Rows:', skippedRows); // Log details of skipped rows\r\n    console.log('Calculated Summary by Sport:', summary);\r\n    console.log('Total Stake:', totalStake);\r\n    console.log('Total Profit/Loss:', totalProfitLoss);\r\n    console.log('Total Unit P/L:', totalUnitProfitLoss);\r\n    console.log('Total Number of Bets:', totalBets);\r\n  }, [summary, totalStake, totalProfitLoss, totalUnitProfitLoss, totalBets, validBetCount, invalidBetCount, skippedRows]);\r\n\r\n  // State for sorting\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Sorting the summary array\r\n  const sortedSummaryArray = [...summaryArray].sort((a, b) => {\r\n    if (!sortConfig.key) return 0;\r\n    const aValue = a[sortConfig.key];\r\n    const bValue = b[sortConfig.key];\r\n\r\n    if (aValue < bValue) {\r\n      return sortConfig.direction === 'asc' ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortConfig.direction === 'asc' ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className=\"summary-table-container\">\r\n      <h2>Summary by Sport</h2>\r\n      <table className=\"summary-table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('sport')}>Sport</th>\r\n            <th onClick={() => handleSort('stake')}>Stake</th>\r\n            <th onClick={() => handleSort('profitLoss')}>P/L</th>\r\n            <th onClick={() => handleSort('unitProfitLoss')}>Unit P/L</th>\r\n            <th onClick={() => handleSort('numBets')}>No. Bets</th>\r\n            <th onClick={() => handleSort('roi')}>ROI (%)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedSummaryArray.map((row, index) => (\r\n            <tr\r\n              key={index}\r\n              className={row.profitLoss > 0 ? 'positive-row' : 'negative-row'}\r\n              onClick={() => onSportClick(row.sport)} // Call onSportClick with the sport name\r\n              style={{ cursor: 'pointer' }} // Add cursor pointer to indicate clickable row\r\n            >\r\n              <td>{row.sport}</td>\r\n              <td>{row.stake.toFixed(2)}</td>\r\n              <td>{row.profitLoss.toFixed(2)}</td>\r\n              <td>{row.unitProfitLoss.toFixed(2)}</td>\r\n              <td>{row.numBets}</td>\r\n              <td>{((row.profitLoss / row.stake) * 100).toFixed(2)}%</td>\r\n            </tr>\r\n          ))}\r\n          {/* Summary row (fixed position) */}\r\n          <tr className={totalProfitLoss > 0 ? 'positive-row' : 'negative-row'}>\r\n            <td>Total</td>\r\n            <td>{totalStake.toFixed(2)}</td>\r\n            <td>{totalProfitLoss.toFixed(2)}</td>\r\n            <td>{totalUnitProfitLoss.toFixed(2)}</td>\r\n            <td>{totalBets}</td>\r\n            <td>{((totalProfitLoss / totalStake) * 100).toFixed(2)}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryBySport;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC;AAAa,CAAC,EAAE;EAC9C;EACA,MAAMC,YAAY,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;;EAElC;EACA,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIC,eAAe,GAAG,CAAC;;EAEvB;EACA,MAAMC,WAAW,GAAG,EAAE;;EAEtB;EACA,MAAMC,OAAO,GAAGL,YAAY,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;IACvD,MAAMC,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,MAAMG,KAAK,GAAGC,UAAU,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,MAAMK,UAAU,GAAGD,UAAU,CAACJ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC,MAAMM,cAAc,GAAGF,UAAU,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE3C;IACA,IAAIO,KAAK,CAACJ,KAAK,CAAC,IAAII,KAAK,CAACF,UAAU,CAAC,IAAIE,KAAK,CAACD,cAAc,CAAC,EAAE;MAC9DX,eAAe,IAAI,CAAC,CAAC,CAAC;MACtBC,WAAW,CAACY,IAAI,CAAC;QAAEP,KAAK,EAAEA,KAAK,GAAG,CAAC;QAAED;MAAI,CAAC,CAAC,CAAC,CAAC;MAC7C,OAAOD,GAAG,CAAC,CAAC;IACd;;IAEA;IACA,IAAIE,KAAK,GAAG,CAAC,KAAK,EAAE,EAAE;MACpBQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEV,GAAG,CAAC;MACtCS,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,KAAK,CAAC;MAC5BO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,KAAK,CAAC;MAC5BM,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,UAAU,CAAC;MACvCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,cAAc,CAAC;IAC1C;IAEAZ,aAAa,IAAI,CAAC,CAAC,CAAC;;IAEpB,IAAI,CAACK,GAAG,CAACG,KAAK,CAAC,EAAE;MACfH,GAAG,CAACG,KAAK,CAAC,GAAG;QACXA,KAAK;QACLC,KAAK,EAAE,CAAC;QACRE,UAAU,EAAE,CAAC;QACbC,cAAc,EAAE,CAAC;QACjBK,OAAO,EAAE;MACX,CAAC;IACH;IAEAZ,GAAG,CAACG,KAAK,CAAC,CAACC,KAAK,IAAIA,KAAK;IACzBJ,GAAG,CAACG,KAAK,CAAC,CAACG,UAAU,IAAIA,UAAU;IACnCN,GAAG,CAACG,KAAK,CAAC,CAACI,cAAc,IAAIA,cAAc,CAAC,CAAC;IAC7CP,GAAG,CAACG,KAAK,CAAC,CAACS,OAAO,IAAI,CAAC;IAEvB,OAAOZ,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMa,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACjB,OAAO,CAAC;;EAE3C;EACA,MAAMkB,UAAU,GAAGH,YAAY,CAACd,MAAM,CAAC,CAACC,GAAG,EAAEiB,GAAG,KAAKjB,GAAG,GAAGiB,GAAG,CAACb,KAAK,EAAE,CAAC,CAAC;EACxE,MAAMc,eAAe,GAAGL,YAAY,CAACd,MAAM,CAAC,CAACC,GAAG,EAAEiB,GAAG,KAAKjB,GAAG,GAAGiB,GAAG,CAACX,UAAU,EAAE,CAAC,CAAC;EAClF,MAAMa,mBAAmB,GAAGN,YAAY,CAACd,MAAM,CAAC,CAACC,GAAG,EAAEiB,GAAG,KAAKjB,GAAG,GAAGiB,GAAG,CAACV,cAAc,EAAE,CAAC,CAAC;EAC1F,MAAMa,SAAS,GAAGP,YAAY,CAACd,MAAM,CAAC,CAACC,GAAG,EAAEiB,GAAG,KAAKjB,GAAG,GAAGiB,GAAG,CAACL,OAAO,EAAE,CAAC,CAAC;;EAEzE;EACAvB,SAAS,CAAC,MAAM;IACdqB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEhB,aAAa,CAAC;IACnDe,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEf,eAAe,CAAC;IACrDc,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEd,WAAW,CAAC,CAAC,CAAC;IAC3Ca,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEb,OAAO,CAAC;IACpDY,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEK,UAAU,CAAC;IACvCN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEO,eAAe,CAAC;IAClDR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,mBAAmB,CAAC;IACnDT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAES,SAAS,CAAC;EACjD,CAAC,EAAE,CAACtB,OAAO,EAAEkB,UAAU,EAAEE,eAAe,EAAEC,mBAAmB,EAAEC,SAAS,EAAEzB,aAAa,EAAEC,eAAe,EAAEC,WAAW,CAAC,CAAC;;EAEvH;EACA,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC;IAAEmC,GAAG,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC;EAE7E,MAAMC,UAAU,GAAIF,GAAG,IAAK;IAC1B,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIH,UAAU,CAACE,GAAG,KAAKA,GAAG,IAAIF,UAAU,CAACG,SAAS,KAAK,KAAK,EAAE;MAC5DA,SAAS,GAAG,MAAM;IACpB;IACAF,aAAa,CAAC;MAAEC,GAAG;MAAEC;IAAU,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAG,CAAC,GAAGb,YAAY,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC1D,IAAI,CAACR,UAAU,CAACE,GAAG,EAAE,OAAO,CAAC;IAC7B,MAAMO,MAAM,GAAGF,CAAC,CAACP,UAAU,CAACE,GAAG,CAAC;IAChC,MAAMQ,MAAM,GAAGF,CAAC,CAACR,UAAU,CAACE,GAAG,CAAC;IAEhC,IAAIO,MAAM,GAAGC,MAAM,EAAE;MACnB,OAAOV,UAAU,CAACG,SAAS,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;IAChD;IACA,IAAIM,MAAM,GAAGC,MAAM,EAAE;MACnB,OAAOV,UAAU,CAACG,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IAChD;IACA,OAAO,CAAC;EACV,CAAC,CAAC;EAEF,oBACErC,KAAA,CAAA6C,aAAA;IAAKC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtCpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,kBAAoB,CAAC,eACzBpD,KAAA,CAAA6C,aAAA;IAAOC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpD,KAAA,CAAA6C,aAAA;IAAIQ,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,OAAO,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAS,CAAC,eAClDpD,KAAA,CAAA6C,aAAA;IAAIQ,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,OAAO,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAS,CAAC,eAClDpD,KAAA,CAAA6C,aAAA;IAAIQ,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,YAAY,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAO,CAAC,eACrDpD,KAAA,CAAA6C,aAAA;IAAIQ,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,gBAAgB,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAY,CAAC,eAC9DpD,KAAA,CAAA6C,aAAA;IAAIQ,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,SAAS,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAY,CAAC,eACvDpD,KAAA,CAAA6C,aAAA;IAAIQ,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,KAAK,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAW,CAC/C,CACC,CAAC,eACRpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGb,kBAAkB,CAACe,GAAG,CAAC,CAACxB,GAAG,EAAEf,KAAK,kBACjCf,KAAA,CAAA6C,aAAA;IACET,GAAG,EAAErB,KAAM;IACX+B,SAAS,EAAEhB,GAAG,CAACX,UAAU,GAAG,CAAC,GAAG,cAAc,GAAG,cAAe;IAChEkC,OAAO,EAAEA,CAAA,KAAMhD,YAAY,CAACyB,GAAG,CAACd,KAAK,CAAE,CAAC;IAAA;IACxCuC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAU,CAAE,CAAC;IAAA;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE9BpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,GAAG,CAACd,KAAU,CAAC,eACpBhB,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,GAAG,CAACb,KAAK,CAACwC,OAAO,CAAC,CAAC,CAAM,CAAC,eAC/BzD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,GAAG,CAACX,UAAU,CAACsC,OAAO,CAAC,CAAC,CAAM,CAAC,eACpCzD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,GAAG,CAACV,cAAc,CAACqC,OAAO,CAAC,CAAC,CAAM,CAAC,eACxCzD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKtB,GAAG,CAACL,OAAY,CAAC,eACtBzB,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,CAAEtB,GAAG,CAACX,UAAU,GAAGW,GAAG,CAACb,KAAK,GAAI,GAAG,EAAEwC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAK,CACxD,CACL,CAAC,eAEFzD,KAAA,CAAA6C,aAAA;IAAIC,SAAS,EAAEf,eAAe,GAAG,CAAC,GAAG,cAAc,GAAG,cAAe;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnEpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC,eACdpD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKvB,UAAU,CAAC4B,OAAO,CAAC,CAAC,CAAM,CAAC,eAChCzD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKrB,eAAe,CAAC0B,OAAO,CAAC,CAAC,CAAM,CAAC,eACrCzD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKpB,mBAAmB,CAACyB,OAAO,CAAC,CAAC,CAAM,CAAC,eACzCzD,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKnB,SAAc,CAAC,eACpBjC,KAAA,CAAA6C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,CAAErB,eAAe,GAAGF,UAAU,GAAI,GAAG,EAAE4B,OAAO,CAAC,CAAC,CAAC,EAAC,GAAK,CAC1D,CACC,CACF,CACJ,CAAC;AAEV;AAEA,eAAetD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}