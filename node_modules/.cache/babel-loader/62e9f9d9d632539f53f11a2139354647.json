{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\SummaryByDay.js\";\nimport React, { useState, useEffect } from 'react';\nfunction SummaryByDay({\n  data,\n  onDateClick\n}) {\n  // Add onDateClick prop\n  // Remove header row by slicing data from index 1\n  const filteredData = data.slice(1);\n\n  // Calculate summary by day\n  const summary = filteredData.reduce((acc, bet) => {\n    const date = bet[0]; // Assuming date is in column A\n    const stake = parseFloat(bet[2]); // Column C: Stake\n    const profitLoss = parseFloat(bet[10]); // Column K: Profit/Loss\n    const unitProfitLoss = parseFloat(bet[9]); // Column J: Unit P/L\n\n    // Check for valid numeric data before proceeding\n    if (isNaN(stake) || isNaN(profitLoss) || isNaN(unitProfitLoss)) {\n      return acc; // Skip rows with invalid data\n    }\n    if (!acc[date]) {\n      acc[date] = {\n        date,\n        stake: 0,\n        profitLoss: 0,\n        unitProfitLoss: 0,\n        numBets: 0\n      };\n    }\n    acc[date].stake += stake;\n    acc[date].profitLoss += profitLoss;\n    acc[date].unitProfitLoss += unitProfitLoss; // Correct calculation\n    acc[date].numBets += 1;\n    return acc;\n  }, {});\n  const summaryArray = Object.values(summary);\n\n  // Calculate totals\n  const totalStake = summaryArray.reduce((acc, row) => acc + row.stake, 0);\n  const totalProfitLoss = summaryArray.reduce((acc, row) => acc + row.profitLoss, 0);\n  const totalUnitProfitLoss = summaryArray.reduce((acc, row) => acc + row.unitProfitLoss, 0);\n  const totalBets = summaryArray.reduce((acc, row) => acc + row.numBets, 0);\n\n  // Log calculated summaries and totals to console\n  useEffect(() => {\n    console.log('Calculated Summary by Day:', summary);\n    console.log('Total Stake:', totalStake);\n    console.log('Total Profit/Loss:', totalProfitLoss);\n    console.log('Total Unit P/L:', totalUnitProfitLoss);\n    console.log('Total Number of Bets:', totalBets);\n  }, [summary, totalStake, totalProfitLoss, totalUnitProfitLoss, totalBets]);\n\n  // State for sorting\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Sorting the summary array\n  const sortedSummaryArray = [...summaryArray].sort((a, b) => {\n    if (!sortConfig.key) return 0;\n    const aValue = a[sortConfig.key];\n    const bValue = b[sortConfig.key];\n    if (aValue < bValue) {\n      return sortConfig.direction === 'asc' ? -1 : 1;\n    }\n    if (aValue > bValue) {\n      return sortConfig.direction === 'asc' ? 1 : -1;\n    }\n    return 0;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Summary by Day\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"summary-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('date'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('stake'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('profitLoss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('unitProfitLoss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Unit P/L\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('numBets'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"No. Bets\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => handleSort('roi'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"ROI (%)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, sortedSummaryArray.map((row, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: row.profitLoss > 0 ? 'positive-row' : 'negative-row',\n    onClick: () => onDateClick(row.date) // Pass date to parent on click\n    ,\n    style: {\n      cursor: 'pointer'\n    } // Make row appear clickable\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, row.date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, row.stake.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, row.profitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, row.unitProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, row.numBets), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, (row.profitLoss / row.stake * 100).toFixed(2), \"%\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: totalProfitLoss > 0 ? 'positive-row' : 'negative-row',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, totalStake.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, totalProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, totalUnitProfitLoss.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, totalBets), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, (totalProfitLoss / totalStake * 100).toFixed(2), \"%\")))));\n}\nexport default SummaryByDay;","map":{"version":3,"names":["React","useState","useEffect","SummaryByDay","data","onDateClick","filteredData","slice","summary","reduce","acc","bet","date","stake","parseFloat","profitLoss","unitProfitLoss","isNaN","numBets","summaryArray","Object","values","totalStake","row","totalProfitLoss","totalUnitProfitLoss","totalBets","console","log","sortConfig","setSortConfig","key","direction","handleSort","sortedSummaryArray","sort","a","b","aValue","bValue","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","style","cursor","toFixed"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/SummaryByDay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SummaryByDay({ data, onDateClick }) { // Add onDateClick prop\r\n  // Remove header row by slicing data from index 1\r\n  const filteredData = data.slice(1);\r\n\r\n  // Calculate summary by day\r\n  const summary = filteredData.reduce((acc, bet) => {\r\n    const date = bet[0]; // Assuming date is in column A\r\n    const stake = parseFloat(bet[2]); // Column C: Stake\r\n    const profitLoss = parseFloat(bet[10]); // Column K: Profit/Loss\r\n    const unitProfitLoss = parseFloat(bet[9]); // Column J: Unit P/L\r\n\r\n    // Check for valid numeric data before proceeding\r\n    if (isNaN(stake) || isNaN(profitLoss) || isNaN(unitProfitLoss)) {\r\n      return acc; // Skip rows with invalid data\r\n    }\r\n\r\n    if (!acc[date]) {\r\n      acc[date] = {\r\n        date,\r\n        stake: 0,\r\n        profitLoss: 0,\r\n        unitProfitLoss: 0,\r\n        numBets: 0,\r\n      };\r\n    }\r\n\r\n    acc[date].stake += stake;\r\n    acc[date].profitLoss += profitLoss;\r\n    acc[date].unitProfitLoss += unitProfitLoss; // Correct calculation\r\n    acc[date].numBets += 1;\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  const summaryArray = Object.values(summary);\r\n\r\n  // Calculate totals\r\n  const totalStake = summaryArray.reduce((acc, row) => acc + row.stake, 0);\r\n  const totalProfitLoss = summaryArray.reduce((acc, row) => acc + row.profitLoss, 0);\r\n  const totalUnitProfitLoss = summaryArray.reduce((acc, row) => acc + row.unitProfitLoss, 0);\r\n  const totalBets = summaryArray.reduce((acc, row) => acc + row.numBets, 0);\r\n\r\n  // Log calculated summaries and totals to console\r\n  useEffect(() => {\r\n    console.log('Calculated Summary by Day:', summary);\r\n    console.log('Total Stake:', totalStake);\r\n    console.log('Total Profit/Loss:', totalProfitLoss);\r\n    console.log('Total Unit P/L:', totalUnitProfitLoss);\r\n    console.log('Total Number of Bets:', totalBets);\r\n  }, [summary, totalStake, totalProfitLoss, totalUnitProfitLoss, totalBets]);\r\n\r\n  // State for sorting\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  // Sorting the summary array\r\n  const sortedSummaryArray = [...summaryArray].sort((a, b) => {\r\n    if (!sortConfig.key) return 0;\r\n    const aValue = a[sortConfig.key];\r\n    const bValue = b[sortConfig.key];\r\n\r\n    if (aValue < bValue) {\r\n      return sortConfig.direction === 'asc' ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortConfig.direction === 'asc' ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className=\"summary-table-container\">\r\n      <h2>Summary by Day</h2>\r\n      <table className=\"summary-table\">\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('date')}>Date</th>\r\n            <th onClick={() => handleSort('stake')}>Stake</th>\r\n            <th onClick={() => handleSort('profitLoss')}>P/L</th>\r\n            <th onClick={() => handleSort('unitProfitLoss')}>Unit P/L</th>\r\n            <th onClick={() => handleSort('numBets')}>No. Bets</th>\r\n            <th onClick={() => handleSort('roi')}>ROI (%)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedSummaryArray.map((row, index) => (\r\n            <tr\r\n              key={index}\r\n              className={row.profitLoss > 0 ? 'positive-row' : 'negative-row'}\r\n              onClick={() => onDateClick(row.date)} // Pass date to parent on click\r\n              style={{ cursor: 'pointer' }} // Make row appear clickable\r\n            >\r\n              <td>{row.date}</td>\r\n              <td>{row.stake.toFixed(2)}</td>\r\n              <td>{row.profitLoss.toFixed(2)}</td>\r\n              <td>{row.unitProfitLoss.toFixed(2)}</td>\r\n              <td>{row.numBets}</td>\r\n              <td>{((row.profitLoss / row.stake) * 100).toFixed(2)}%</td>\r\n            </tr>\r\n          ))}\r\n          {/* Summary row (fixed position) */}\r\n          <tr className={totalProfitLoss > 0 ? 'positive-row' : 'negative-row'}>\r\n            <td>Total</td>\r\n            <td>{totalStake.toFixed(2)}</td>\r\n            <td>{totalProfitLoss.toFixed(2)}</td>\r\n            <td>{totalUnitProfitLoss.toFixed(2)}</td>\r\n            <td>{totalBets}</td>\r\n            <td>{((totalProfitLoss / totalStake) * 100).toFixed(2)}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryByDay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}