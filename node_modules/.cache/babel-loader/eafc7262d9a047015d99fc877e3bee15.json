{"ast":null,"code":"import axios from 'axios';\n\n// Google Sheets API constants\nconst SHEET_ID = '1aj-xt9lKz8tux2LhaHjVDhjCT3TKlaf1xdoOjLKJxtU'; // Your Google Sheet ID\nconst API_KEY = 'AIzaSyCpQeGu5ttgs7nRF6bgTfK08CssTjkOAYI'; // Your Google Sheets API key\nconst RANGE = 'Betting%20Tips!A:AN'; // The dynamic range covering all rows in columns A to AN\n\n// Sports Live Scores API constants\nconst RAPIDAPI_HOST = 'sports-live-scores.p.rapidapi.com';\nconst RAPIDAPI_KEY = '276a8c0736mshf09375fb00da8bap1572e3jsn0fb6089294a2';\nconst BASE_URL = 'https://sports-live-scores.p.rapidapi.com';\n\n/**\n * Fetch data from Google Sheets\n * @returns {Array} - An array of rows from the Google Sheet\n */\nexport const fetchData = async () => {\n  const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;\n  console.log('Fetching URL:', url);\n  try {\n    const response = await axios.get(url);\n    console.log('API Response:', response);\n    console.log('Data Values:', response.data.values);\n    return response.data.values;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n};\n\n/**\n * Fetch live football events from Sports Live Scores API\n * @returns {Array} - An array of live football events\n */\nexport const fetchLiveFootballEvents = async () => {\n  const url = `${BASE_URL}/football/live_matches`;\n  console.log('Fetching Live Football Events URL:', url);\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'x-rapidapi-host': RAPIDAPI_HOST,\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Live Football Events API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching live football events:', error);\n    return [];\n  }\n};\n\n/**\n * Fetch odds for a specific event by Event ID\n * @param {string} eventId - The ID of the event to fetch odds for\n * @returns {Object} - The odds data for the specified event\n */\nexport const fetchEventOdds = async eventId => {\n  const url = `${BASE_URL}/get_odds/${eventId}`;\n  console.log(`Fetching Odds for Event ID ${eventId}:`, url);\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'x-rapidapi-host': RAPIDAPI_HOST,\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(`Odds API Response for Event ID ${eventId}:`, response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching odds for event ID ${eventId}:`, error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","SHEET_ID","API_KEY","RANGE","RAPIDAPI_HOST","RAPIDAPI_KEY","BASE_URL","fetchData","url","console","log","response","get","data","values","error","fetchLiveFootballEvents","headers","fetchEventOdds","eventId"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Google Sheets API constants\nconst SHEET_ID = '1aj-xt9lKz8tux2LhaHjVDhjCT3TKlaf1xdoOjLKJxtU'; // Your Google Sheet ID\nconst API_KEY = 'AIzaSyCpQeGu5ttgs7nRF6bgTfK08CssTjkOAYI'; // Your Google Sheets API key\nconst RANGE = 'Betting%20Tips!A:AN'; // The dynamic range covering all rows in columns A to AN\n\n// Sports Live Scores API constants\nconst RAPIDAPI_HOST = 'sports-live-scores.p.rapidapi.com';\nconst RAPIDAPI_KEY = '276a8c0736mshf09375fb00da8bap1572e3jsn0fb6089294a2';\nconst BASE_URL = 'https://sports-live-scores.p.rapidapi.com';\n\n/**\n * Fetch data from Google Sheets\n * @returns {Array} - An array of rows from the Google Sheet\n */\nexport const fetchData = async () => {\n  const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;\n  console.log('Fetching URL:', url);\n\n  try {\n    const response = await axios.get(url);\n    console.log('API Response:', response);\n    console.log('Data Values:', response.data.values);\n    return response.data.values;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n};\n\n/**\n * Fetch live football events from Sports Live Scores API\n * @returns {Array} - An array of live football events\n */\nexport const fetchLiveFootballEvents = async () => {\n  const url = `${BASE_URL}/football/live_matches`;\n  console.log('Fetching Live Football Events URL:', url);\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'x-rapidapi-host': RAPIDAPI_HOST,\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    console.log('Live Football Events API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching live football events:', error);\n    return [];\n  }\n};\n\n/**\n * Fetch odds for a specific event by Event ID\n * @param {string} eventId - The ID of the event to fetch odds for\n * @returns {Object} - The odds data for the specified event\n */\nexport const fetchEventOdds = async (eventId) => {\n  const url = `${BASE_URL}/get_odds/${eventId}`;\n  console.log(`Fetching Odds for Event ID ${eventId}:`, url);\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'x-rapidapi-host': RAPIDAPI_HOST,\n        'x-rapidapi-key': RAPIDAPI_KEY,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n    console.log(`Odds API Response for Event ID ${eventId}:`, response.data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching odds for event ID ${eventId}:`, error);\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,8CAA8C,CAAC,CAAC;AACjE,MAAMC,OAAO,GAAG,yCAAyC,CAAC,CAAC;AAC3D,MAAMC,KAAK,GAAG,qBAAqB,CAAC,CAAC;;AAErC;AACA,MAAMC,aAAa,GAAG,mCAAmC;AACzD,MAAMC,YAAY,GAAG,oDAAoD;AACzE,MAAMC,QAAQ,GAAG,2CAA2C;;AAE5D;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,GAAG,GAAG,iDAAiDP,QAAQ,WAAWE,KAAK,QAAQD,OAAO,EAAE;EACtGO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,GAAG,CAAC;EAEjC,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,GAAG,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAAC;IACtCF,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;IACjD,OAAOH,QAAQ,CAACE,IAAI,CAACC,MAAM;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EACjD,MAAMR,GAAG,GAAG,GAAGF,QAAQ,wBAAwB;EAC/CG,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,GAAG,CAAC;EAEtD,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,GAAG,EAAE;MACpCS,OAAO,EAAE;QACP,iBAAiB,EAAEb,aAAa;QAChC,gBAAgB,EAAEC,YAAY;QAC9B,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAChE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC/C,MAAMX,GAAG,GAAG,GAAGF,QAAQ,aAAaa,OAAO,EAAE;EAC7CV,OAAO,CAACC,GAAG,CAAC,8BAA8BS,OAAO,GAAG,EAAEX,GAAG,CAAC;EAE1D,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,GAAG,EAAE;MACpCS,OAAO,EAAE;QACP,iBAAiB,EAAEb,aAAa;QAChC,gBAAgB,EAAEC,YAAY;QAC9B,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAAC,kCAAkCS,OAAO,GAAG,EAAER,QAAQ,CAACE,IAAI,CAAC;IACxE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,oCAAoCI,OAAO,GAAG,EAAEJ,KAAK,CAAC;IACpE,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}