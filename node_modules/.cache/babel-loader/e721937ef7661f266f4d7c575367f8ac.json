{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CMW1\\\\Downloads\\\\betting-tips-app\\\\src\\\\components\\\\CumulativeGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nfunction CumulativeGraph({\n  data\n}) {\n  // Extract relevant data from the columns\n  const cumulativePLData = data.map(row => parseFloat(row[11])); // Column L: Cumulative P/L\n  const cumulativeStakeData = data.map(row => parseFloat(row[12])); // Column M: Cumulative Stake\n  const betDetails = data.map(row => row[5]); // Column F: Bet details\n\n  // Filter out invalid data points\n  const filteredData = cumulativePLData.filter((value, index) => !isNaN(value) && !isNaN(cumulativeStakeData[index]));\n  const filteredBetDetails = betDetails.filter((_, index) => !isNaN(cumulativePLData[index]) && !isNaN(cumulativeStakeData[index]));\n\n  // Prepare data for chart\n  const chartData = {\n    labels: filteredData.map((_, index) => cumulativeStakeData[index]),\n    // X-axis labels as cumulative stake values\n    datasets: [{\n      label: 'Cumulative P/L',\n      data: filteredData,\n      fill: false,\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n\n  // Chart options with custom tooltip and bold gridline for y = 0\n  const options = {\n    scales: {\n      x: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Cumulative Stake'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Cumulative P/L'\n        },\n        grid: {\n          color: context => {\n            // Make the grid line at y = 0 thicker and darker\n            if (context.tick.value === 0) {\n              return '#000'; // Darker color for y = 0\n            }\n            return '#ddd'; // Default gridline color\n          },\n          lineWidth: context => {\n            // Make the grid line at y = 0 thicker\n            if (context.tick.value === 0) {\n              return 2; // Thicker line for y = 0\n            }\n            return 1; // Default line width\n          }\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          // Custom tooltip content\n          label: tooltipItem => {\n            const betDetail = filteredBetDetails[tooltipItem.dataIndex];\n            const cumulativePL = filteredData[tooltipItem.dataIndex];\n            return [`${betDetail}`, `Cumulative P/L: ${cumulativePL.toFixed(2)}`];\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Cumulative P/L vs Cumulative Stake\"), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\nexport default CumulativeGraph;","map":{"version":3,"names":["React","Line","CumulativeGraph","data","cumulativePLData","map","row","parseFloat","cumulativeStakeData","betDetails","filteredData","filter","value","index","isNaN","filteredBetDetails","_","chartData","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","x","type","title","display","text","y","grid","color","context","tick","lineWidth","plugins","tooltip","callbacks","tooltipItem","betDetail","dataIndex","cumulativePL","toFixed","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/CMW1/Downloads/betting-tips-app/src/components/CumulativeGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction CumulativeGraph({ data }) {\r\n  // Extract relevant data from the columns\r\n  const cumulativePLData = data.map((row) => parseFloat(row[11])); // Column L: Cumulative P/L\r\n  const cumulativeStakeData = data.map((row) => parseFloat(row[12])); // Column M: Cumulative Stake\r\n  const betDetails = data.map((row) => row[5]); // Column F: Bet details\r\n\r\n  // Filter out invalid data points\r\n  const filteredData = cumulativePLData.filter((value, index) => !isNaN(value) && !isNaN(cumulativeStakeData[index]));\r\n  const filteredBetDetails = betDetails.filter((_, index) => !isNaN(cumulativePLData[index]) && !isNaN(cumulativeStakeData[index]));\r\n\r\n  // Prepare data for chart\r\n  const chartData = {\r\n    labels: filteredData.map((_, index) => cumulativeStakeData[index]), // X-axis labels as cumulative stake values\r\n    datasets: [\r\n      {\r\n        label: 'Cumulative P/L',\r\n        data: filteredData,\r\n        fill: false,\r\n        backgroundColor: 'rgb(75, 192, 192)',\r\n        borderColor: 'rgba(75, 192, 192, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options with custom tooltip and bold gridline for y = 0\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'linear',\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative Stake',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Cumulative P/L',\r\n        },\r\n        grid: {\r\n          color: (context) => {\r\n            // Make the grid line at y = 0 thicker and darker\r\n            if (context.tick.value === 0) {\r\n              return '#000'; // Darker color for y = 0\r\n            }\r\n            return '#ddd'; // Default gridline color\r\n          },\r\n          lineWidth: (context) => {\r\n            // Make the grid line at y = 0 thicker\r\n            if (context.tick.value === 0) {\r\n              return 2; // Thicker line for y = 0\r\n            }\r\n            return 1; // Default line width\r\n          },\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          // Custom tooltip content\r\n          label: (tooltipItem) => {\r\n            const betDetail = filteredBetDetails[tooltipItem.dataIndex];\r\n            const cumulativePL = filteredData[tooltipItem.dataIndex];\r\n            return [`${betDetail}`, `Cumulative P/L: ${cumulativePL.toFixed(2)}`];\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cumulative P/L vs Cumulative Stake</h2>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CumulativeGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}